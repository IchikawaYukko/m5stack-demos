{"category":"MCUinfo","color":"#0000ff","blocks":["__MCUinfo_get_cpu_freq","__MCUinfo_get_cpu_freq_mhz","__MCUinfo_get_cpu_temp","__MCUinfo_get_flash_size","__MCUinfo_get_hall_sensor","__MCUinfo_set_debug_level"],"jscode":"// Block __MCUinfo_get_cpu_freq\nvar __MCUinfo_get_cpu_freq_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"CPU Frequency\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_get_cpu_freq'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_get_cpu_freq_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_get_cpu_freq'] = function(block) {\n        return [`machine.freq()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MCUinfo_get_cpu_freq_mhz\nvar __MCUinfo_get_cpu_freq_mhz_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"CPU Frequency (MHz)\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_get_cpu_freq_mhz'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_get_cpu_freq_mhz_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_get_cpu_freq_mhz'] = function(block) {\n        return [`machine.freq() / 1000000`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MCUinfo_get_cpu_temp\nvar __MCUinfo_get_cpu_temp_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"CPU Temperature (C)\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_get_cpu_temp'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_get_cpu_temp_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_get_cpu_temp'] = function(block) {\n        return [`esp32.raw_temperature()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MCUinfo_get_flash_size\nvar __MCUinfo_get_flash_size_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Flash Size (Bytes)\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_get_flash_size'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_get_flash_size_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_get_flash_size'] = function(block) {\n        return [`esp.flash_size()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MCUinfo_get_hall_sensor\nvar __MCUinfo_get_hall_sensor_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"CPU Hall Sensor\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_get_hall_sensor'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_get_hall_sensor_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_get_hall_sensor'] = function(block) {\n        return [`esp32.hall_sensor()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MCUinfo_set_debug_level\nvar __MCUinfo_set_debug_level_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Set MicroPython Debug Level\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"uart_number\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"uart_number\"\n        }\n    ],\n    \"colour\": \"#0000ff\"\n};\n\nwindow['Blockly'].Blocks['__MCUinfo_set_debug_level'] = {\n    init: function() {\n        this.jsonInit(__MCUinfo_set_debug_level_json);\n    }\n};\n\nwindow['Blockly'].Python['__MCUinfo_set_debug_level'] = function(block) {\n    var uart_number = block.getFieldValue('uart_number');\n    return `esp.osdebug($uart_number)` + \"\\n\";\n};\n\n","code":{"get_cpu_freq":["window['Blockly'].Python['__MCUinfo_get_cpu_freq'] = function(block) {\n        return [`machine.freq()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","machine.freq()"],"get_cpu_freq_mhz":["window['Blockly'].Python['__MCUinfo_get_cpu_freq_mhz'] = function(block) {\n        return [`machine.freq() / 1000000`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","machine.freq() / 1000000"],"get_cpu_temp":["window['Blockly'].Python['__MCUinfo_get_cpu_temp'] = function(block) {\n        return [`esp32.raw_temperature()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","esp32.raw_temperature()"],"get_flash_size":["window['Blockly'].Python['__MCUinfo_get_flash_size'] = function(block) {\n        return [`esp.flash_size()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","esp.flash_size()"],"get_hall_sensor":["window['Blockly'].Python['__MCUinfo_get_hall_sensor'] = function(block) {\n        return [`esp32.hall_sensor()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","esp32.hall_sensor()"],"set_debug_level":["window['Blockly'].Python['__MCUinfo_set_debug_level'] = function(block) {\n    var uart_number = block.getFieldValue('uart_number');\n    return `esp.osdebug($uart_number)` + \"\\n\";\n};\n\n","esp.osdebug($uart_number)"]}}